var qs   = require('querystring');
var uuid = require("random-uuid-v4");
var cookie = {};

function Session(req, res, option) {
    option.expire = option.expire || 1000*60*60;
    option.cookie = option.cookie || 1000*60*60*24*30;
    option.path = option.path || '/';
    option.httponly = option.httponly===undefined || option.httponly;

    this._set = function(session) {
        var timestamp = new Date().getTime();
        for(var n in cookie) {
            if(cookie[n].timestamp < timestamp) delete cookie[n];
        }

        var sessionID = option.uuid || uuid();
        session.timestamp = timestamp + option.expire;
        cookie[sessionID] = session;
        return sessionID;
    };

    this._get = function(sessionID) {
        if(sessionID && cookie[sessionID]) {
            var timestamp = new Date().getTime();
            if(cookie[sessionID].timestamp >= timestamp) {
                cookie[sessionID].timestamp = timestamp + option.expire;
                return cookie[sessionID];
            }
            delete cookie[sessionID];
        }
        return null;
    };

    this._del = function(sessionID) {
        if(sessionID && cookie[sessionID]) delete cookie[sessionID];
    };

    this._id = function() {
        return qs.parse(req.headers.cookie, /;\s*/)[option.sessionID];
    };

    this.set = function(session) {
        var sessionID = this._set(session),
            expires = new Date(cookie[sessionID].timestamp + option.cookie),
            _cookie = option.sessionID + '=' + sessionID
                    + ';expires=' + expires.toGMTString()
                    + ';path=' + option.path;
        if(option.domain) _cookie += ';domain=' + option.domain;
        if(option.secure) _cookie += ';secure';
        if(option.httponly) _cookie += ';httponly';
        res.setHeader("Set-Cookie", _cookie);
        return sessionID;
    };

    this.get = function() {
        return this._get(this._id());
    };

    this.del = function() {
        this._del(this._id());
    };
}

module.exports = Session;
