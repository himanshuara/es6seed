var exec = require('child_process').exec;
var stat = {};
var wolf = false;

function average(it, stamp) {
    var slice = stamp-it.stamp;
    it.count++;
    if(slice >= 1) {
        it.avg   = 0.95*it.avg+0.05*it.count/slice;
        it.count = 0;
        it.stamp = stamp;
    }
}

function sniff(ip) {
    var stamp = new Date().getTime()/1000;
    if(stat[ip]) average(stat[ip], stamp);
    else {
        stat[ip] = {
            avg  : 0,
            count: 0,
            stamp: stamp
        };
        console.log('dog say: '+ip);
    }
    return stat[ip].avg > 10;
}

function clear(expire) {
    var stamp = new Date().getTime()/1000-expire;
    for(var ip in stat) {
        if(stat[ip].stamp < stamp) delete stat[ip];
    }
}

function setup(expire) {
    setInterval(clear, expire*1000, expire);
    wolf = true;
}

function drop(ip) {
    var cmd = 'iptables -I INPUT -s '+ip+' -j DROP';
    exec(cmd, function(err, stdout, stderr) {
        if(!err) delete stat[ip];
        console.log(cmd);
    });
}

exec('iptables -L', function(err, stdout, stderr) {
    if(!err) setup(5*60);
});

module.exports = function(req, res, path) {
    var ip = req.headers['x-real-ip'] || req.connection.remoteAddress;
    wolf && (ip!=='127.0.0.1') && sniff(ip) && drop(ip);
    return path;
};
